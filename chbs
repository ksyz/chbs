#!/usr/bin/perl
# 2015, Michal Ingeli <mi@v3.sk>, WTF-PL
package Acme::CBHS;

use strict;
use warnings;
use Data::Dumper;

use Math::Random::Secure qw(irand);
use Getopt::Long  qw(:config no_ignore_case bundling);
use File::Slurp;

sub check;
sub mangle;
sub dice;
sub jar;
sub throw;
sub help;

my %c = (
	words => 6,
	symbols => 0,
	min_length => 4,
	max_length => 8,
	dict => '/usr/share/dict/words',
	count => 1,
	capitalize_first => 0,
	overall_length => 32,
);

my $options = GetOptions(
	'w|words=i' => \$c{words},
	'S|symbols' => \$c{symbols},
	'm|min=i' => \$c{min_length},
	'M|max=i' => \$c{max_length},
	'd|dictionary=s' => \$c{dict},
	'c|count=i' => \$c{count},
	'h|help' => \$c{help},
	'C|capitalize-first' => \$c{capitalize_first},
);

sub help {
	return <<HELP;
cbhs [ OPTIONS ]
OPTIONS:
-w,--words INT
	Number of words (default $c{words}
-S,--symbols
	Don't skip dictionary words with symbols and numbers (default false)
-m,--minimum INT
	Minimum word length (default $c{min_length}
-M,--maximum INT
	Maximum word length (default $c{max_length}
-d,--dictionary FILE
	Dictionary file (default $c{dict})
-c,--count INT
	Number of generated sets, one per line (default $c{count})
-C,capitalize-first
	Capitalize first letter (default false)
HELP
};

exit 1
	unless ($options);

if ($c{help}) {
	print help;
	exit 0;
}

my @lines = read_file($c{dict});

for (;$c{count};$c{count}--) {
	my @parts = jar;
	throw @parts;
}

sub jar {
	my @parts;
	for (my $i = $c{words}; $i; $i--) {
		push @parts, dice;
	};
	return @parts;
};

sub dice {
	my $word;
	while (1) {
		$word = mangle $lines[irand($#lines)];
		next 
			unless check $word;
		return $word;
	}
};

sub mangle {
	my $word = lc shift;
	chomp $word;
	$word = ucfirst $word
		if ($c{capitalize_first});
	return $word;
};
	
sub check {
	my $word = shift;
	return undef
		if (length $word < $c{min_length});
	return undef
		if (length $word > $c{max_length});
	return undef
		if (!$c{symbols} && $word !~ /^[a-z]+$/i);
	return 1;
};

sub throw {
	my @parts = @_;
	printf("%s\n", join(' ', @parts));
}

1;
